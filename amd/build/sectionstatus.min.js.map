{"version":3,"file":"sectionstatus.min.js","sources":["../src/sectionstatus.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n// import Section from 'core_courseformat/local/content/section';\n\n/**\n * Course section format component.\n *\n * @module     format_flexsections/sectionstatus\n * @copyright  2023 Alex P devlion.co\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['core/ajax', 'core/notification', 'core/templates'],\n    function(Ajax, Notification, Templates) {\n        return {\n            init: function(sectionid) {\n                this.getSectionStatus(sectionid);\n            },\n            renderSectionStatus: function(data) {\n\n                Templates.renderForPromise('format_flexsections/sectionstatus', data)\n\n                // It returns a promise that needs to be resoved.\n                .then(({html, js}) => {\n                    Templates.appendNodeContents('#sectionStatus', html, js);\n                })\n\n                // Deal with this exception (Using core/notify exception function is recommended).\n                .catch(() => Notification.exception);\n            },\n            getSectionStatus: function(sectionid) {\n\n                const request = {\n                    methodname: 'format_flexsections_get_section_status',\n                    args: {\n                        sectionid: sectionid,\n                    }\n                };\n\n                Ajax.call([request])[0]\n                    .done((data) => {\n                        this.renderSectionStatus(JSON.parse(data));\n                    })\n                    .fail(Notification.exception);\n            },\n        };\n    });\n"],"names":["define","Ajax","Notification","Templates","init","sectionid","getSectionStatus","renderSectionStatus","data","renderForPromise","then","_ref","html","js","appendNodeContents","catch","exception","request","methodname","args","call","done","JSON","parse","fail"],"mappings":";;;;;;;AAwBAA,2CAAO,CAAC,YAAa,oBAAqB,mBACtC,SAASC,KAAMC,aAAcC,iBAClB,CACHC,KAAM,SAASC,gBACNC,iBAAiBD,YAE1BE,oBAAqB,SAASC,MAE1BL,UAAUM,iBAAiB,oCAAqCD,MAG/DE,MAAKC,WAACC,KAACA,KAADC,GAAOA,SACVV,UAAUW,mBAAmB,iBAAkBF,KAAMC,OAIxDE,OAAM,IAAMb,aAAac,aAE9BV,iBAAkB,SAASD,iBAEjBY,QAAU,CACZC,WAAY,yCACZC,KAAM,CACFd,UAAWA,YAInBJ,KAAKmB,KAAK,CAACH,UAAU,GAChBI,MAAMb,YACED,oBAAoBe,KAAKC,MAAMf,UAEvCgB,KAAKtB,aAAac"}