{"version":3,"file":"collapsebutton.min.js","sources":["../src/collapsebutton.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for collapse button.\n *\n * @package\n * @copyright  2020 Devlion <info@devlion.co>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n    [\n        'jquery',\n        'core/str'\n    ],\n    function($, Str) {\n\n        const collapseAction = (type) => {\n            $('.course-section').each(function() {\n                let number = $(this).data('number');\n\n                if (number > 0) {\n                    let id = '#collapssesection' + number;\n                    let status = $(id).attr(\"aria-expanded\");\n\n                    if ((type === 'open' && status === 'false') || (type === 'close' && status === 'true')) {\n                        $(id).click();\n                    }\n                }\n            });\n        };\n\n        const getHashNumber = () => {\n            let queryString = window.location;\n            let urlParams = new URLSearchParams(queryString);\n            let hash = urlParams.get('hash');\n\n            if (hash.length > 0) {\n                return hash.match(/\\d+/)[0];\n            } else {\n                return false;\n            }\n        };\n\n        const openHash = () => {\n            let number = getHashNumber();\n            if (number !== false) {\n                let id = '#collapssesection' + number;\n                let status = $(id).attr(\"aria-expanded\");\n\n                $('.course-section').each(function() {\n                    let number2 = $(this).data('number');\n\n                    let id2 = '#collapssesection' + number2;\n                    let status2 = $(id2).attr(\"aria-expanded\");\n\n                    if (id !== id2 && status2 === 'true') {\n                        $(id2).click();\n                    }\n\n                    if (id === id2 && status === 'false') {\n                        $(id2).click();\n                    }\n                });\n            }\n        };\n\n        return {\n            init: function() {\n\n                // Default state.\n                setTimeout(function() {\n                    if (getHashNumber() !== false) {\n                        openHash();\n                    } else {\n                        collapseAction('open');\n                    }\n                }, 700);\n\n                // Change in url string. Hash.\n                window.addEventListener('hashchange', function() {\n                    openHash();\n                });\n\n                Str.get_strings([\n                    {key: 'collapsebuttonopen', component: 'format_flexsections'},\n                    {key: 'collapsebuttonclose', component: 'format_flexsections'}\n                ]).done(function(strings) {\n\n                    $('#collapse_button').on(\"click\", function() {\n                        let action = $(this).data('action');\n\n                        switch (action) {\n                            case 'close':\n                                $(this).data('action', 'open').text(strings[1]);\n                                collapseAction('open');\n                                break;\n\n                            case 'open':\n                                $(this).data('action', 'close').text(strings[0]);\n                                collapseAction('close');\n                                break;\n\n                            default:\n                                $(this).data('action', 'close').text(strings[0]);\n                        }\n                    });\n                });\n            },\n        };\n    });\n"],"names":["define","$","Str","collapseAction","type","each","number","this","data","id","status","attr","click","getHashNumber","queryString","window","location","hash","URLSearchParams","get","length","match","openHash","id2","status2","init","setTimeout","addEventListener","get_strings","key","component","done","strings","on","text"],"mappings":";;;;;;;AAuBAA,4CACI,CACI,SACA,aAEJ,SAASC,EAAGC,WAEFC,eAAkBC,OACpBH,EAAE,mBAAmBI,MAAK,eAClBC,OAASL,EAAEM,MAAMC,KAAK,aAEtBF,OAAS,EAAG,KACRG,GAAK,oBAAsBH,OAC3BI,OAAST,EAAEQ,IAAIE,KAAK,kBAEV,SAATP,MAA8B,UAAXM,QAAiC,UAATN,MAA+B,SAAXM,SAChET,EAAEQ,IAAIG,aAMhBC,cAAgB,SACdC,YAAcC,OAAOC,SAErBC,KADY,IAAIC,gBAAgBJ,aACfK,IAAI,eAErBF,KAAKG,OAAS,GACPH,KAAKI,MAAM,OAAO,IAM3BC,SAAW,SACThB,OAASO,oBACE,IAAXP,OAAkB,KACdG,GAAK,oBAAsBH,OAC3BI,OAAST,EAAEQ,IAAIE,KAAK,iBAExBV,EAAE,mBAAmBI,MAAK,eAGlBkB,IAAM,oBAFItB,EAAEM,MAAMC,KAAK,UAGvBgB,QAAUvB,EAAEsB,KAAKZ,KAAK,iBAEtBF,KAAOc,KAAmB,SAAZC,SACdvB,EAAEsB,KAAKX,QAGPH,KAAOc,KAAkB,UAAXb,QACdT,EAAEsB,KAAKX,mBAMhB,CACHa,KAAM,WAGFC,YAAW,YACiB,IAApBb,gBACAS,WAEAnB,eAAe,UAEpB,KAGHY,OAAOY,iBAAiB,cAAc,WAClCL,cAGJpB,IAAI0B,YAAY,CACZ,CAACC,IAAK,qBAAsBC,UAAW,uBACvC,CAACD,IAAK,sBAAuBC,UAAW,yBACzCC,MAAK,SAASC,SAEb/B,EAAE,oBAAoBgC,GAAG,SAAS,kBACjBhC,EAAEM,MAAMC,KAAK,eAGjB,QACDP,EAAEM,MAAMC,KAAK,SAAU,QAAQ0B,KAAKF,QAAQ,IAC5C7B,eAAe,kBAGd,OACDF,EAAEM,MAAMC,KAAK,SAAU,SAAS0B,KAAKF,QAAQ,IAC7C7B,eAAe,uBAIfF,EAAEM,MAAMC,KAAK,SAAU,SAAS0B,KAAKF,QAAQ"}