{"version":3,"file":"statusloader.min.js","sources":["../src/statusloader.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Javascript for lazy load of statuses.\n *\n * @package\n * @copyright  2020 Devlion <info@devlion.co>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n    [\n        'jquery',\n        'core/ajax',\n        'local_petel/inview',\n        'core/notification'\n    ],\n    function($, Ajax, inView, Notification) {\n        var courseid = null;\n\n        let getStatus = function(cmids) {\n            if (courseid) {\n                Ajax.call([{\n                    methodname: 'format_flexsections_get_activity_grade_status',\n                    args: {\n                        cmids: cmids,\n                        courseid: courseid\n                    },\n                    done: function(resp) {\n                        let response = JSON.parse(resp);\n                        response.result.forEach(function(item) {\n                            $('#activity-row-grade-' + item.cmid).html(item.gradestatus);\n                            $('#activity-oer-version-' + item.cmid).html(item.oerversion);\n                        });\n                    },\n                    fail: Notification.exception\n                }]);\n            }\n        };\n        let inview = function() {\n            let stack = [];\n            inView('.inviewgrade')\n                .on('enter', function(e) {\n                    if (!$(e).hasClass('inview-done')) {\n                        $(e).addClass('inview-done');\n                        let cmid = $(e).attr(\"data-cmid\");\n                        courseid = $(e).attr(\"data-courseid\");\n\n                        stack.push(cmid);\n                    }\n                });\n\n            setInterval(function() {\n                if (stack.length > 0) {\n                    let cmids = JSON.stringify(stack);\n                    getStatus(cmids);\n                    stack = [];\n                }\n            }, 500);\n\n        };\n        return {\n            inview: inview,\n        };\n    });\n"],"names":["define","$","Ajax","inView","Notification","courseid","inview","stack","on","e","hasClass","addClass","cmid","attr","push","setInterval","length","cmids","call","methodname","args","done","resp","JSON","parse","result","forEach","item","html","gradestatus","oerversion","fail","exception","getStatus","stringify"],"mappings":";;;;;;;AAuBAA,0CACI,CACI,SACA,YACA,qBACA,sBAEJ,SAASC,EAAGC,KAAMC,OAAQC,kBAClBC,SAAW,WA2CR,CACHC,OAvBS,eACLC,MAAQ,GACZJ,OAAO,gBACFK,GAAG,SAAS,SAASC,OACbR,EAAEQ,GAAGC,SAAS,eAAgB,CAC/BT,EAAEQ,GAAGE,SAAS,mBACVC,KAAOX,EAAEQ,GAAGI,KAAK,aACrBR,SAAWJ,EAAEQ,GAAGI,KAAK,iBAErBN,MAAMO,KAAKF,UAIvBG,aAAY,cACJR,MAAMS,OAAS,EAAG,EAjCd,SAASC,OACjBZ,UACAH,KAAKgB,KAAK,CAAC,CACPC,WAAY,gDACZC,KAAM,CACFH,MAAOA,MACPZ,SAAUA,UAEdgB,KAAM,SAASC,MACIC,KAAKC,MAAMF,MACjBG,OAAOC,SAAQ,SAASC,MAC7B1B,EAAE,uBAAyB0B,KAAKf,MAAMgB,KAAKD,KAAKE,aAChD5B,EAAE,yBAA2B0B,KAAKf,MAAMgB,KAAKD,KAAKG,gBAG1DC,KAAM3B,aAAa4B,aAoBnBC,CADYV,KAAKW,UAAU3B,QAE3BA,MAAQ,MAEb"}